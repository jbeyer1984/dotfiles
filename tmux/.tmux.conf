set -g prefix C-f
set -s escape-time 0
set-window-option -g mode-keys vi

set -g default-terminal "screen-256color"

# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
#set allow-rename off

set-option -g default-shell /bin/zsh

#bind-key m setw -g mode-mouse on
#bind-key n setw -g mode-mouse off
bind-key m setw -g mouse on
bind-key M setw -g mouse off

bind-key n new-window

bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

bind r respawn-pane -k

bind-key - copy-mode
bind-key o paste-buffer

bind -T copy-mode-vi v send -X begin-selection

#¤bind-key enter next-layout

# use vim-like keys for splits and windows
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R

## smart pane switching with awareness of vim splits
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
#bind C-l send-keys 'C-l'

bind-key space last-pane
bind-key p last-window
bind-key q display-panes
#bind-key c new-window
bind-key t next-window
bind-key T previous-window

# Make mouse useful in copy mode
setw -g mouse on

# Allow mouse to select which pane to use
# set -g mouse-select-pane on

#bind y run-shell -b "tmux save-buffer - | xclip -i"
#bind-key -t vi-copy y copy-pipe "xclip -sel clip -i"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -r -selection clipboard'

#bind-key -T copy-mode-vi DoubleClick1Pane select-pane; send-keys -X select-word-no-clear ; send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
#bind-key -n DoubleClick1Pane select-pane ; copy-mode -M ; send-keys -X select-word ; send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

set-option -s set-clipboard off
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -e -sel clipboard"



# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'dracula/tmux'

#set -g @yank_selection_mouse 'clipboard'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-strategy-vim 'session'
# set -g @plugin 'christoomey/vim-tmux-navigator'

#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @yank_selection 'primary'

# set -g @plugin 'tmux-plugins/tmux-sessionist'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

